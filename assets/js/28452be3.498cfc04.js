"use strict";(self.webpackChunkwalnut_plan=self.webpackChunkwalnut_plan||[]).push([[188],{7779:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=t(4848),r=t(8453);const i={sidebar_position:1},o="How to Train our Models?",a={id:"projects/o1_replicate/exploration_journey/train",title:"How to Train our Models?",description:"Our experiments utilize the pre-trained language model deepseek-math-7b-base. The training process is divided into two main phases: Supervised Fine-Tuning (SFT) and Direct Preference Learning (DPO).",source:"@site/docs/projects/o1_replicate/2_exploration_journey/09_train.md",sourceDirName:"projects/o1_replicate/2_exploration_journey",slug:"/projects/o1_replicate/exploration_journey/train",permalink:"/walnut-plan/docs/projects/o1_replicate/exploration_journey/train",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"How to Evaluate our Trials?",permalink:"/walnut-plan/docs/projects/o1_replicate/exploration_journey/eval_trial"},next:{title:"What would be an effective annotation strategy for human-ai collaboration?",permalink:"/walnut-plan/docs/projects/o1_replicate/exploration_journey/human_annotation"}},l={},d=[{value:"Phase 1: Supervised Fine-Tuning (SFT)",id:"phase-1-supervised-fine-tuning-sft",level:3},{value:"Phase 2: Direct Preference Learning (DPO)",id:"phase-2-direct-preference-learning-dpo",level:3},{value:"Results",id:"results",level:3}];function c(e){const n={code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"how-to-train-our-models",children:"How to Train our Models?"})}),"\n",(0,s.jsx)(n.p,{children:"Our experiments utilize the pre-trained language model deepseek-math-7b-base. The training process is divided into two main phases: Supervised Fine-Tuning (SFT) and Direct Preference Learning (DPO)."}),"\n",(0,s.jsx)(n.h3,{id:"phase-1-supervised-fine-tuning-sft",children:"Phase 1: Supervised Fine-Tuning (SFT)"}),"\n",(0,s.jsx)(n.p,{children:"The SFT process consists of two stages:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ShortCut Learning:"})," In this initial stage, we focus on fine-tuning the model using responses that include only the correct intermediate steps and the final correct answer. We fine-tune Deepseek-math-7b-base on the Abel dataset, which comprises 120k examples, and the PRM800K dataset. For each question in PRM800K, we utilize a single correct step-by-step solution, discarding responses that do not lead to the final answer. This results in a total of 6,998 examples for fine-tuning. During this stage, we conduct fine-tuning for one epoch on each dataset, primarily aiming to familiarize the model with the desired response format."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Journey Learning:"})," In this second stage, we further fine-tune the initial stage SFT model using the long thoughts we constructed, which comprise 327 examples. This phase is designed to enhance the model's ability to detect errors, incorporate reflections, execute corrections, and perform backtracking. By training on long thoughts that include not only the correct reasoning paths but also erroneous trials, we aim to equip the model with a deeper understanding of the complexities involved in longer reasoning chains. As a comparison, we also fine-tune the model on the corresponding shortCut generated from the same reasoning tree, which also consists of 327 examples. Both the long thought SFT and shortCut SFT settings are trained for 3 epochs on these 327 examples."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"phase-2-direct-preference-learning-dpo",children:"Phase 2: Direct Preference Learning (DPO)"}),"\n",(0,s.jsxs)(n.p,{children:["In this phase, we generate 20 responses per question from the MATH Train dataset, a re-divided dataset from PRM800k that includes 12,000 examples, using nucleus sampling with ",(0,s.jsx)(n.code,{children:"top_p = 0.95"})," and temperature ",(0,s.jsx)(n.code,{children:"T = 0.7"}),". These 20 responses are categorized into positive and negative responses based on the correctness of the final answer. From these, we randomly select 5 positive responses and 5 negative responses to create 5 preference pairs. We then train the model using these preference pairs with DPO loss, allowing it to learn from the comparison of correct and incorrect answers."]}),"\n",(0,s.jsx)(n.h3,{id:"results",children:"Results"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{children:"deepseek-sft-abel"}),(0,s.jsx)(n.th,{children:"deepseek-sft-prm800k"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"SFT-phase1"})}),(0,s.jsx)(n.td,{children:"0.372"}),(0,s.jsx)(n.td,{children:"0.290"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"SFT-phase2-shortcutLearning"})}),(0,s.jsx)(n.td,{children:"0.386"}),(0,s.jsx)(n.td,{children:"0.348"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"SFT-phase2-journeyLearning"})}),(0,s.jsx)(n.td,{children:"0.470"}),(0,s.jsx)(n.td,{children:"0.428"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"DPO"})}),(0,s.jsx)(n.td,{children:"0.472"}),(0,s.jsx)(n.td,{children:"0.440"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Table: Training Results on MATH Test Set"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);